name: Build Projects

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-cmake-x86_64:
    name: Build CMake (x86_64)
    # Use ubuntu-latest for x86_64 architecture for the CMake build
    runs-on: ubuntu-latest

    steps:
      - name: Setup NASM
        uses: ilammy/setup-nasm@v1

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build CMake Project
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    # Uncomment the following section if you have CMake tests
    # - name: Test CMake Project
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest -C ${{env.BUILD_TYPE}}

  build-rust-arm64:
    name: Build Rust (ARM64)
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Build Rust Project
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release # Build in release mode for optimized binaries
